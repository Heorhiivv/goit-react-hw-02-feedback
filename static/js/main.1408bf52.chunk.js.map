{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Statistics/Section.jsx","components/Notifications/Notifications.jsx","components/App/App.jsx","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","onClick","type","GOOD","NEUTRAL","BAD","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","defaultProps","Notification","message","App","state","handleOnLeaveFeedback","e","target","textContent","setState","prevState","console","log","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kNA0BeA,EAvBS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBACjC,OACE,sBAAKC,QAAWD,EAAhB,UACE,wBAAQE,KAAK,SAAb,SACGH,EAAQI,OAGX,wBAAQD,KAAK,SAAb,SACCH,EAAQK,UAGT,wBAAQF,KAAK,SAAb,SACGH,EAAQM,UCMFC,EAlBI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAE7C,OACK,+BACE,wCAAWJ,KACX,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,2CAAcC,IAAd,WCRJC,EAAU,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SACvB,OACE,oCACE,6BAAKD,IACJC,MAIPF,EAAQG,aAAe,CACrBF,MAAO,YAMMD,QCfTI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KAEbD,EAAaD,aAAe,CAC1BE,QAAS,yBAKID,QCLTjB,EAAU,CACdI,KAAM,OACNC,QAAS,UACTC,IAAK,OAmEQa,E,4MA9DbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,sBAAwB,SAACC,GAGvB,OAFiBA,EAAEC,OAAOC,aAGxB,IAAK,OACH,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BlB,KAAMkB,EAAUlB,KAAO,MAEzB,MAEF,IAAK,UACH,EAAKiB,UAAS,SAACC,GAAD,MAAgB,CAC5BjB,QAASiB,EAAUjB,QAAU,MAE/B,MAEF,IAAK,MACH,EAAKgB,UAAS,SAACC,GAAD,MAAgB,CAC5BhB,IAAKgB,EAAUhB,IAAM,MAEvB,MAEF,QACEiB,QAAQC,IAAI,kB,EAIlBC,mBAAqB,kBAAM,EAAKT,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,EAE7EoB,gCAAkC,kBAC/B,EAAKV,MAAMZ,KAAWuB,KAAKC,KAAM,EAAKZ,MAAMZ,KAAO,EAAKqB,qBAAwB,KAA9D,G,uDAEX,IAAD,EACsBI,KAAKb,MAA3BZ,EADA,EACAA,KAAME,EADN,EACMA,IAAKD,EADX,EACWA,QAClB,OACE,eAAC,EAAD,CAASK,MAAO,wBAAhB,UACE,cAAC,EAAD,CAAiBb,gBAAiBgC,KAAKZ,sBAAuBrB,QAASA,IAEvE,cAAC,EAAD,CAASc,MAAO,aAAhB,SACGmB,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,KAAKJ,mBACZjB,mBAAoBqB,KAAKH,kCAG3B,cAAC,EAAD,CAAcZ,QAAQ,+B,GAxDhBgB,aCRlBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1408bf52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n  return (\r\n    <div onClick = {onLeaveFeedback}>\r\n      <button type=\"button\">\r\n        {options.GOOD}\r\n      </button>\r\n\r\n      <button type=\"button\">\r\n      {options.NEUTRAL}\r\n      </button>\r\n\r\n      <button type=\"button\">\r\n        {options.BAD}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => { \r\n \r\n   return (\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral:{neutral}</li>\r\n          <li>Bad:{bad}</li>\r\n          <li>Total:{total()}</li>\r\n          <li>Feedback:{positivePercentage()}%</li>\r\n        </ul>\r\n    )\r\n  };\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired\r\n};\r\nexport default Statistics","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({title, children}) =>{\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\nSection.defaultProps = {\r\n  title: 'Feedback'\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n}\r\nexport default Section","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\nNotification.defaultProps = {\r\n  message: 'There is nothing here'\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}\r\nexport default Notification;\r\n\r\n","import React, {Component} from \"react\"\r\n\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\"\r\nimport Statistics from \"../Statistics/Statistics\"\r\nimport Section from \"../Statistics/Section\"\r\nimport Notification from \"../Notifications/Notifications\"\r\n\r\nconst options = {\r\n  GOOD: \"good\",\r\n  NEUTRAL: \"neutral\",\r\n  BAD: \"bad\",\r\n}\r\n\r\nclass App extends Component {\r\n \r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n\r\n  handleOnLeaveFeedback = (e) => {\r\n    const feedback = e.target.textContent\r\n\r\n    switch (feedback) {\r\n      case \"good\":\r\n        this.setState((prevState) => ({\r\n          good: prevState.good + 1,\r\n        }))\r\n        break\r\n\r\n      case \"neutral\":\r\n        this.setState((prevState) => ({\r\n          neutral: prevState.neutral + 1,\r\n        }))\r\n        break\r\n\r\n      case \"bad\":\r\n        this.setState((prevState) => ({\r\n          bad: prevState.bad + 1,\r\n        }))\r\n        break\r\n\r\n      default:\r\n        console.log(\"no any votes\")\r\n    }\r\n  }\r\n\r\n  countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad\r\n\r\n  countPositiveFeedbackPercentage = () =>\r\n    !this.state.good ? 0 : Math.ceil((this.state.good / this.countTotalFeedback()) * 100)\r\n\r\n  render() {\r\n    const {good, bad, neutral} = this.state\r\n    return (\r\n      <Section title={\"Please leave feedback\"}>\r\n        <FeedbackOptions onLeaveFeedback={this.handleOnLeaveFeedback} options={options} />\r\n\r\n        <Section title={\"Statistics\"}>\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}